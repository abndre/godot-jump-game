name: 'Publish to GitHub Pages'
image: barichello/godot-ci:3.5.1

# NOTE: the `cd` command in each build stage is not necessary if your
# project.godot is at the repo root
# https://gitlab.com/barichello/godot-ci/-/blob/master/.gitlab-ci.yml
# Cache imported assets between runs
on:
  workflow_dispatch:
  push:
    branches:
      - master

cache:
  key: import-assets
  paths:
    - .import/

stages:
  - export
  - deploy

variables:
  EXPORT_NAME: test-project


web:
  stage: export
  script:
    - mkdir -v -p build/web
    - cd $EXPORT_NAME
    - godot -v --export "HTML5" ../build/web/index.html
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/web

# GitHub Pages Deploy
deploy-github-pages:
  stage: deploy
  dependencies:
    - web
  script:
    # This ensures the `gh-pages` branch is available.
    - git fetch
    - git checkout gh-pages
    - rm -f *.md
    - mv build/web/** .
    - git config user.email $GIT_EMAIL
    - git config user.name $GIT_USERNAME
    - git remote add github $REMOTE_URL
    - git add -A
    - 'git commit -m "ci: Deploy GitHub Page | $EXPORT_NAME:$CI_JOB_NAME" -m "Deploy from GitLab pipeline #$CI_PIPELINE_ID" || true'
    - git push github gh-pages -f
  script:
    # This ensures the `gh-pages` branch is available.
    - git fetch
    - git checkout gh-pages
    - rm -f *.md
    - mv build/web/** .
    - git config user.email $GIT_EMAIL
    - git config user.name $GIT_USERNAME
    - git remote add github $REMOTE_URL
    - git add -A
    - 'git commit -m "ci: Deploy GitHub Page | $EXPORT_NAME:$CI_JOB_NAME" -m "Deploy from GitLab pipeline #$CI_PIPELINE_ID" || true'
    - git push github gh-pages -f
